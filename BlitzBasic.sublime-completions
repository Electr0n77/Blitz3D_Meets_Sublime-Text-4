{
	"scope": "source.blitzbasic",
	"completions":
	[
		{ "trigger": "DebugLog", "contents": "DebugLog( ${1:text} )"},
		{ "trigger": "FreeTimer", "contents": "FreeTimer( ${1:timer} )"},
		{ "trigger": "WaitTimer", "contents": "WaitTimer( ${1:timer} )"},
		{ "trigger": "CreateTimer", "contents": "CreateTimer( hertz )"},
		{ "trigger": "SetEnv", "contents": "SetEnv( env_var$, value$ )"},
		{ "trigger": "GetEnv", "contents": "GetEnv( env_var$ )"},
		{ "trigger": "SystemProperty", "contents": "SystemProperty( property$ )"},
		{ "trigger": "CommandLine", "contents": "CommandLine( )"},
		{ "trigger": "MilliSecs", "contents": "MilliSecs( )"},
		{ "trigger": "Delay", "contents": "Delay millisecs"},
		{ "trigger": "ExecFile", "contents": "ExecFile command$"},
		{ "trigger": "RuntimeError", "contents": "RuntimeError message$"},
		{ "trigger": "AppTitle", "contents": "AppTitle title$[,close_prompt$]"},
		{ "trigger": "RuntimeStats", "contents": "RuntimeStats "},
		{ "trigger": "EntityClass", "contents": "EntityClass( entity )"},
		{ "trigger": "EntityName", "contents": "EntityName( entity )"},
		{ "trigger": "NameEntity", "contents": "NameEntity entity,name$"},
		{ "trigger": "FreeEntity", "contents": "FreeEntity entity"},
		{ "trigger": "ShowEntity", "contents": "ShowEntity entity"},
		{ "trigger": "HideEntity", "contents": "HideEntity entity"},
		{ "trigger": "EntityOrder", "contents": "EntityOrder entity,order"},
		{ "trigger": "EntityAutoFade", "contents": "EntityAutoFade entity,near#,far#"},
		{ "trigger": "EntityFX", "contents": "EntityFX entity,fx"},
		{ "trigger": "EntityBlend", "contents": "EntityBlend entity,blend"},
		{ "trigger": "EntityTexture", "contents": "EntityTexture entity,texture[,frame][,index]"},
		{ "trigger": "EntityShininess", "contents": "EntityShininess entity,shininess#"},
		{ "trigger": "EntityAlpha", "contents": "EntityAlpha entity,alpha#"},
		{ "trigger": "EntityColor", "contents": "EntityColor entity,red#,green#,blue#"},
		{ "trigger": "PaintEntity", "contents": "PaintEntity entity,brush"},
		{ "trigger": "FindChild", "contents": "FindChild( entity,name$ )"},
		{ "trigger": "GetChild", "contents": "GetChild( entity,index )"},
		{ "trigger": "CountChildren", "contents": "CountChildren( entity )"},
		{ "trigger": "EntityParent", "contents": "EntityParent entity,parent[,global]"},
		{ "trigger": "Animating", "contents": "Animating( entity )"},
		{ "trigger": "AnimLength", "contents": "AnimLength( entity )"},
		{ "trigger": "AnimTime", "contents": "AnimTime( entity )"},
		{ "trigger": "AnimSeq", "contents": "AnimSeq( entity )"},
		{ "trigger": "ExtractAnimSeq", "contents": "ExtractAnimSeq( entity,first_frame,last_frame[,anim_seq] )"},
		{ "trigger": "AddAnimSeq", "contents": "AddAnimSeq( entity,length )"},
		{ "trigger": "SetAnimKey", "contents": "SetAnimKey entity,frame[,pos_key][,rot_key][,scale_key]"},
		{ "trigger": "Animate", "contents": "Animate entity[,mode][,speed#][,sequence][,transition#]"},
		{ "trigger": "SetAnimTime", "contents": "SetAnimTime entity,time#[,anim_seq]"},
		{ "trigger": "AlignToVector", "contents": "AlignToVector entity,vector_x#,vector_y#,vector_z#,axis[,rate#]"},
		{ "trigger": "PointEntity", "contents": "PointEntity entity,target[,roll#]"},
		{ "trigger": "RotateEntity", "contents": "RotateEntity entity,pitch#,yaw#,roll#[,global]"},
		{ "trigger": "ScaleEntity", "contents": "ScaleEntity entity,x_scale#,y_scale#,z_scale#[,global]"},
		{ "trigger": "PositionEntity", "contents": "PositionEntity entity,x#,y#,z#[,global]"},
		{ "trigger": "TranslateEntity", "contents": "TranslateEntity entity,x#,y#,z#[,global]"},
		{ "trigger": "TurnEntity", "contents": "TurnEntity entity,pitch#,yaw#,roll#[,global]"},
		{ "trigger": "MoveEntity", "contents": "MoveEntity entity,x#,y#,z#"},
		{ "trigger": "CollisionTriangle", "contents": "CollisionTriangle( entity,collision_index )"},
		{ "trigger": "CollisionSurface", "contents": "CollisionSurface( entity,collision_index )"},
		{ "trigger": "CollisionEntity", "contents": "CollisionEntity( entity,collision_index )"},
		{ "trigger": "CollisionTime", "contents": "CollisionTime( entity,collision_index )"},
		{ "trigger": "CollisionNZ", "contents": "CollisionNZ( entity,collision_index )"},
		{ "trigger": "CollisionNY", "contents": "CollisionNY( entity,collision_index )"},
		{ "trigger": "CollisionNX", "contents": "CollisionNX( entity,collision_index )"},
		{ "trigger": "CollisionZ", "contents": "CollisionZ( entity,collision_index )"},
		{ "trigger": "CollisionY", "contents": "CollisionY( entity,collision_index )"},
		{ "trigger": "CollisionX", "contents": "CollisionX( entity,collision_index )"},
		{ "trigger": "CountCollisions", "contents": "CountCollisions( entity )"},
		{ "trigger": "EntityCollided", "contents": "EntityCollided( entity,type )"},
		{ "trigger": "EntityDistance", "contents": "EntityDistance( source_entity,destination_entity )"},
		{ "trigger": "EntityBox", "contents": "EntityBox entity,x#,y#,z#,width#,height#,depth#"},
		{ "trigger": "EntityRadius", "contents": "EntityRadius entity,x_radius#[,y_radius#]"},
		{ "trigger": "GetEntityType", "contents": "GetEntityType( entity )"},
		{ "trigger": "GetParent", "contents": "GetParent( entity )"},
		{ "trigger": "EntityPickMode", "contents": "EntityPickMode entity,pick_geometry[,obscurer]"},
		{ "trigger": "EntityType", "contents": "EntityType entity,collision_type[,recursive]"},
		{ "trigger": "ResetEntity", "contents": "ResetEntity entity"},
		{ "trigger": "DeltaYaw", "contents": "DeltaYaw( src_entity,dest_entity )"},
		{ "trigger": "DeltaPitch", "contents": "DeltaPitch( src_entity,dest_entity )"},
		{ "trigger": "VectorPitch", "contents": "VectorPitch( x#,y#,z# )"},
		{ "trigger": "VectorYaw", "contents": "VectorYaw( x#,y#,z# )"},
		{ "trigger": "TFormedZ", "contents": "TFormedZ( )"},
		{ "trigger": "TFormedY", "contents": "TFormedY( )"},
		{ "trigger": "TFormedX", "contents": "TFormedX( )"},
		{ "trigger": "TFormNormal", "contents": "TFormNormal x#,y#,z#,source_entity,dest_entity"},
		{ "trigger": "TFormVector", "contents": "TFormVector x#,y#,z#,source_entity,dest_entity"},
		{ "trigger": "TFormPoint", "contents": "TFormPoint x#,y#,z#,source_entity,dest_entity"},
		{ "trigger": "GetMatElement", "contents": "GetMatElement( entity,row,column )"},
		{ "trigger": "EntityRoll", "contents": "EntityRoll( entity[,global] )"},
		{ "trigger": "EntityYaw", "contents": "EntityYaw( entity[,global] )"},
		{ "trigger": "EntityPitch", "contents": "EntityPitch( entity[,global] )"},
		{ "trigger": "EntityZ", "contents": "EntityZ( entity[,global] )"},
		{ "trigger": "EntityY", "contents": "EntityY( entity[,global] )"},
		{ "trigger": "EntityX", "contents": "EntityX( entity[,global] )"},
		{ "trigger": "CopyEntity", "contents": "CopyEntity( entity[,parent] )"},
		{ "trigger": "EmitSound", "contents": "EmitSound( sound,entity )"},
		{ "trigger": "CreateListener", "contents": "CreateListener( parent[,rolloff_factor#][,doppler_scale#][,distance_scale#] )"},
		{ "trigger": "ModifyTerrain", "contents": "ModifyTerrain terrain,terrain_x,terrain_z,height#[,realtime]"},
		{ "trigger": "TerrainHeight", "contents": "TerrainHeight( terrain,terrain_x,terrain_z )"},
		{ "trigger": "TerrainSize", "contents": "TerrainSize( terrain )"},
		{ "trigger": "TerrainZ", "contents": "TerrainZ( terrain,world_x#,world_y#,world_z# )"},
		{ "trigger": "TerrainY", "contents": "TerrainY( terrain,world_x#,world_y#,world_z# )"},
		{ "trigger": "TerrainX", "contents": "TerrainX( terrain,world_x#,world_y#,world_z# )"},
		{ "trigger": "TerrainShading", "contents": "TerrainShading terrain,enable"},
		{ "trigger": "TerrainDetail", "contents": "TerrainDetail terrain,detail_level[,morph]"},
		{ "trigger": "LoadTerrain", "contents": "LoadTerrain( heightmap_file$[,parent] )"},
		{ "trigger": "CreateTerrain", "contents": "CreateTerrain( grid_size[,parent] )"},
		{ "trigger": "CreatePlane", "contents": "CreatePlane( [segments][,parent] )"},
		{ "trigger": "CreateMirror", "contents": "CreateMirror( [parent] )"},
		{ "trigger": "BSPAmbientLight", "contents": "BSPAmbientLight bsp,red#,green#,blue#"},
		{ "trigger": "BSPLighting", "contents": "BSPLighting bsp,use_lightmaps"},
		{ "trigger": "LoadBSP", "contents": "LoadBSP( file$[,gamma_adj#][,parent] )"},
		{ "trigger": "MD2Animating", "contents": "MD2Animating( md2 )"},
		{ "trigger": "MD2AnimLength", "contents": "MD2AnimLength( md2 )"},
		{ "trigger": "MD2AnimTime", "contents": "MD2AnimTime( md2 )"},
		{ "trigger": "AnimateMD2", "contents": "AnimateMD2 md2[,mode][,speed#][,first_frame][,last_frame][,transition#]"},
		{ "trigger": "LoadMD2", "contents": "LoadMD2( file$[,parent] )"},
		{ "trigger": "SpriteViewMode", "contents": "SpriteViewMode sprite,view_mode"},
		{ "trigger": "HandleSprite", "contents": "HandleSprite sprite,x_handle#,y_handle#"},
		{ "trigger": "ScaleSprite", "contents": "ScaleSprite sprite,x_scale#,y_scale#"},
		{ "trigger": "RotateSprite", "contents": "RotateSprite sprite,angle#"},
		{ "trigger": "LoadSprite", "contents": "LoadSprite( file$[,texture_flags][,parent] )"},
		{ "trigger": "CreateSprite", "contents": "CreateSprite( [parent] )"},
		{ "trigger": "CreatePivot", "contents": "CreatePivot( [parent] )"},
		{ "trigger": "LightConeAngles", "contents": "LightConeAngles light,inner_angle#,outer_angle#"},
		{ "trigger": "LightRange", "contents": "LightRange light,range#"},
		{ "trigger": "LightColor", "contents": "LightColor light,red#,green#,blue#"},
		{ "trigger": "CreateLight", "contents": "CreateLight( [type][,parent] )"},
		{ "trigger": "PickedTriangle", "contents": "PickedTriangle( )"},
		{ "trigger": "PickedSurface", "contents": "PickedSurface( )"},
		{ "trigger": "PickedEntity", "contents": "PickedEntity( )"},
		{ "trigger": "PickedTime", "contents": "PickedTime( )"},
		{ "trigger": "PickedNZ", "contents": "PickedNZ( )"},
		{ "trigger": "PickedNY", "contents": "PickedNY( )"},
		{ "trigger": "PickedNX", "contents": "PickedNX( )"},
		{ "trigger": "PickedZ", "contents": "PickedZ( )"},
		{ "trigger": "PickedY", "contents": "PickedY( )"},
		{ "trigger": "PickedX", "contents": "PickedX( )"},
		{ "trigger": "CameraPick", "contents": "CameraPick( camera,viewport_x#,viewport_y# )"},
		{ "trigger": "LinePick", "contents": "LinePick( x#,y#,z#,dx#,dy#,dz#[,radius#] )"},
		{ "trigger": "EntityPick", "contents": "EntityPick( entity,range# )"},
		{ "trigger": "EntityVisible", "contents": "EntityVisible( src_entity,dest_entity )"},
		{ "trigger": "EntityInView", "contents": "EntityInView( entity,camera )"},
		{ "trigger": "ProjectedZ", "contents": "ProjectedZ( )"},
		{ "trigger": "ProjectedY", "contents": "ProjectedY( )"},
		{ "trigger": "ProjectedX", "contents": "ProjectedX( )"},
		{ "trigger": "CameraProject", "contents": "CameraProject camera,x#,y#,z#"},
		{ "trigger": "CameraFogMode", "contents": "CameraFogMode camera,mode"},
		{ "trigger": "CameraFogRange", "contents": "CameraFogRange camera,near#,far#"},
		{ "trigger": "CameraFogColor", "contents": "CameraFogColor camera,red#,green#,blue#"},
		{ "trigger": "CameraViewport", "contents": "CameraViewport camera,x,y,width,height"},
		{ "trigger": "CameraProjMode", "contents": "CameraProjMode camera,mode"},
		{ "trigger": "CameraClsMode", "contents": "CameraClsMode camera,cls_color,cls_zbuffer"},
		{ "trigger": "CameraClsColor", "contents": "CameraClsColor camera,red#,green#,blue#"},
		{ "trigger": "CameraRange", "contents": "CameraRange camera,near#,far#"},
		{ "trigger": "CameraZoom", "contents": "CameraZoom camera,zoom#"},
		{ "trigger": "CreateCamera", "contents": "CreateCamera( [parent] )"},
		{ "trigger": "TriangleVertex", "contents": "TriangleVertex( surface,index,vertex )"},
		{ "trigger": "VertexW", "contents": "VertexW( surface,index[,coord_set] )"},
		{ "trigger": "VertexV", "contents": "VertexV( surface,index[,coord_set] )"},
		{ "trigger": "VertexU", "contents": "VertexU( surface,index[,coord_set] )"},
		{ "trigger": "VertexAlpha", "contents": "VertexAlpha( surface,index )"},
		{ "trigger": "VertexBlue", "contents": "VertexBlue( surface,index )"},
		{ "trigger": "VertexGreen", "contents": "VertexGreen( surface,index )"},
		{ "trigger": "VertexRed", "contents": "VertexRed( surface,index )"},
		{ "trigger": "VertexNZ", "contents": "VertexNZ( surface,index )"},
		{ "trigger": "VertexNY", "contents": "VertexNY( surface,index )"},
		{ "trigger": "VertexNX", "contents": "VertexNX( surface,index )"},
		{ "trigger": "VertexZ", "contents": "VertexZ( surface,index )"},
		{ "trigger": "VertexY", "contents": "VertexY( surface,index )"},
		{ "trigger": "VertexX", "contents": "VertexX( surface,index )"},
		{ "trigger": "CountTriangles", "contents": "CountTriangles( surface )"},
		{ "trigger": "CountVertices", "contents": "CountVertices( surface )"},
		{ "trigger": "VertexTexCoords", "contents": "VertexTexCoords surface,index,u#,v#[,w#][,coord_set]"},
		{ "trigger": "VertexColor", "contents": "VertexColor surface,index,red#,green#,blue#[,alpha#]"},
		{ "trigger": "VertexNormal", "contents": "VertexNormal surface,index,nx#,ny#,nz#"},
		{ "trigger": "VertexCoords", "contents": "VertexCoords surface,index,x#,y#,z#"},
		{ "trigger": "AddTriangle", "contents": "AddTriangle( surface,v0,v1,v2 )"},
		{ "trigger": "AddVertex", "contents": "AddVertex( surface,x#,y#,z#[,u#][,v#][,w#] )"},
		{ "trigger": "PaintSurface", "contents": "PaintSurface surface,brush"},
		{ "trigger": "ClearSurface", "contents": "ClearSurface surface[,clear_vertices][,clear_triangles]"},
		{ "trigger": "FindSurface", "contents": "FindSurface( mesh,brush )"},
		{ "trigger": "GetEntityBrush", "contents": "GetEntityBrush( entity )"},
		{ "trigger": "GetSurfaceBrush", "contents": "GetSurfaceBrush( surface )"},
		{ "trigger": "CreateSurface", "contents": "CreateSurface( mesh[,brush] )"},
		{ "trigger": "MeshCullBox", "contents": "MeshCullBox mesh,x#,y#,z#,width#,height#,depth#"},
		{ "trigger": "GetSurface", "contents": "GetSurface( mesh,surface_index )"},
		{ "trigger": "CountSurfaces", "contents": "CountSurfaces( mesh )"},
		{ "trigger": "MeshesIntersect", "contents": "MeshesIntersect( mesh_a,mesh_b )"},
		{ "trigger": "MeshDepth", "contents": "MeshDepth( mesh )"},
		{ "trigger": "MeshHeight", "contents": "MeshHeight( mesh )"},
		{ "trigger": "MeshWidth", "contents": "MeshWidth( mesh )"},
		{ "trigger": "LightMesh", "contents": "LightMesh mesh,red#,green#,blue#[,range#][,x#][,y#][,z#]"},
		{ "trigger": "UpdateNormals", "contents": "UpdateNormals mesh"},
		{ "trigger": "AddMesh", "contents": "AddMesh source_mesh,dest_mesh"},
		{ "trigger": "PaintMesh", "contents": "PaintMesh mesh,brush"},
		{ "trigger": "FlipMesh", "contents": "FlipMesh mesh"},
		{ "trigger": "FitMesh", "contents": "FitMesh mesh,x#,y#,z#,width#,height#,depth#[,uniform]"},
		{ "trigger": "PositionMesh", "contents": "PositionMesh mesh,x#,y#,z#"},
		{ "trigger": "RotateMesh", "contents": "RotateMesh mesh,pitch#,yaw#,roll#"},
		{ "trigger": "ScaleMesh", "contents": "ScaleMesh mesh,x_scale#,y_scale#,z_scale#"},
		{ "trigger": "CopyMesh", "contents": "CopyMesh( mesh[,parent] )"},
		{ "trigger": "CreateCone", "contents": "CreateCone( [segments][,solid][,parent] )"},
		{ "trigger": "CreateCylinder", "contents": "CreateCylinder( [segments][,solid][,parent] )"},
		{ "trigger": "CreateSphere", "contents": "CreateSphere( [segments][,parent] )"},
		{ "trigger": "CreateCube", "contents": "CreateCube( [parent] )"},
		{ "trigger": "CreateMesh", "contents": "CreateMesh( [parent] )"},
		{ "trigger": "LoadAnimSeq", "contents": "LoadAnimSeq( entity,file$ )"},
		{ "trigger": "LoadAnimMesh", "contents": "LoadAnimMesh( file$[,parent] )"},
		{ "trigger": "LoadMesh", "contents": "LoadMesh( file$[,parent] )"},
		{ "trigger": "BrushFX", "contents": "BrushFX brush,fx"},
		{ "trigger": "BrushBlend", "contents": "BrushBlend brush,blend"},
		{ "trigger": "GetBrushTexture", "contents": "GetBrushTexture( brush[,index] )"},
		{ "trigger": "BrushTexture", "contents": "BrushTexture brush,texture[,frame][,index]"},
		{ "trigger": "BrushShininess", "contents": "BrushShininess brush,shininess#"},
		{ "trigger": "BrushAlpha", "contents": "BrushAlpha brush,alpha#"},
		{ "trigger": "BrushColor", "contents": "BrushColor brush,red#,green#,blue#"},
		{ "trigger": "FreeBrush", "contents": "FreeBrush brush"},
		{ "trigger": "LoadBrush", "contents": "LoadBrush( file$[,texture_flags][,u_scale#][,v_scale#] )"},
		{ "trigger": "CreateBrush", "contents": "CreateBrush( [red#][,green#][,blue#] )"},
		{ "trigger": "TextureFilter", "contents": "TextureFilter match_text$[,texture_flags]"},
		{ "trigger": "ClearTextureFilters", "contents": "ClearTextureFilters "},
		{ "trigger": "TextureBuffer", "contents": "TextureBuffer( texture[,frame] )"},
		{ "trigger": "SetCubeMode", "contents": "SetCubeMode texture,mode"},
		{ "trigger": "SetCubeFace", "contents": "SetCubeFace texture,face"},
		{ "trigger": "TextureName", "contents": "TextureName( texture )"},
		{ "trigger": "TextureHeight", "contents": "TextureHeight( texture )"},
		{ "trigger": "TextureWidth", "contents": "TextureWidth( texture )"},
		{ "trigger": "PositionTexture", "contents": "PositionTexture texture,u_offset#,v_offset#"},
		{ "trigger": "RotateTexture", "contents": "RotateTexture texture,angle#"},
		{ "trigger": "ScaleTexture", "contents": "ScaleTexture texture,u_scale#,v_scale#"},
		{ "trigger": "TextureCoords", "contents": "TextureCoords texture,coords"},
		{ "trigger": "TextureBlend", "contents": "TextureBlend texture,blend"},
		{ "trigger": "FreeTexture", "contents": "FreeTexture texture"},
		{ "trigger": "LoadAnimTexture", "contents": "LoadAnimTexture( file$,flags,width,height,first,count )"},
		{ "trigger": "LoadTexture", "contents": "LoadTexture( file$[,flags] )"},
		{ "trigger": "CreateTexture", "contents": "CreateTexture( width,height[,flags][,frames] )"},
		{ "trigger": "Stats3D", "contents": "Stats3D( type )"},
		{ "trigger": "TrisRendered", "contents": "TrisRendered( )"},
		{ "trigger": "ActiveTextures", "contents": "ActiveTextures( )"},
		{ "trigger": "ClearWorld", "contents": "ClearWorld [entities][,brushes][,textures]"},
		{ "trigger": "RenderWorld", "contents": "RenderWorld [tween#]"},
		{ "trigger": "CaptureWorld", "contents": "CaptureWorld "},
		{ "trigger": "UpdateWorld", "contents": "UpdateWorld [elapsed_time#]"},
		{ "trigger": "Collisions", "contents": "Collisions source_type,destination_type,method,response"},
		{ "trigger": "ClearCollisions", "contents": "ClearCollisions "},
		{ "trigger": "AmbientLight", "contents": "AmbientLight red#,green#,blue#"},
		{ "trigger": "WireFrame", "contents": "WireFrame enable"},
		{ "trigger": "AntiAlias", "contents": "AntiAlias enable"},
		{ "trigger": "Dither", "contents": "Dither enable"},
		{ "trigger": "WBuffer", "contents": "WBuffer enable"},
		{ "trigger": "GfxDriverCaps3D", "contents": "GfxDriverCaps3D( )"},
		{ "trigger": "HWTexUnits", "contents": "HWTexUnits( )"},
		{ "trigger": "HWMultiTex", "contents": "HWMultiTex enable"},
		{ "trigger": "LoaderMatrix", "contents": "LoaderMatrix file_ext$,xx#,xy#,xz#,yx#,yy#,yz#,zx#,zy#,zz#"},
		{ "trigger": "NetMsgData", "contents": "NetMsgData( )"},
		{ "trigger": "NetMsgTo", "contents": "NetMsgTo( )"},
		{ "trigger": "NetMsgFrom", "contents": "NetMsgFrom( )"},
		{ "trigger": "NetMsgType", "contents": "NetMsgType( )"},
		{ "trigger": "RecvNetMsg", "contents": "RecvNetMsg( )"},
		{ "trigger": "SendNetMsg", "contents": "SendNetMsg( type,msg$,from_player[,to_player][,reliable] )"},
		{ "trigger": "NetPlayerLocal", "contents": "NetPlayerLocal( player )"},
		{ "trigger": "NetPlayerName", "contents": "NetPlayerName( player )"},
		{ "trigger": "DeleteNetPlayer", "contents": "DeleteNetPlayer player"},
		{ "trigger": "CreateNetPlayer", "contents": "CreateNetPlayer( name$ )"},
		{ "trigger": "StopNetGame", "contents": "StopNetGame "},
		{ "trigger": "JoinNetGame", "contents": "JoinNetGame( game_name$,ip_address$ )"},
		{ "trigger": "HostNetGame", "contents": "HostNetGame( game_name$ )"},
		{ "trigger": "StartNetGame", "contents": "StartNetGame( )"},
		{ "trigger": "Load3DSound", "contents": "Load3DSound( filename$ )"},
		{ "trigger": "ChannelPlaying", "contents": "ChannelPlaying( channel )"},
		{ "trigger": "ChannelPan", "contents": "ChannelPan channel,pan#"},
		{ "trigger": "ChannelVolume", "contents": "ChannelVolume channel,volume#"},
		{ "trigger": "ChannelPitch", "contents": "ChannelPitch channel,pitch"},
		{ "trigger": "ResumeChannel", "contents": "ResumeChannel channel"},
		{ "trigger": "PauseChannel", "contents": "PauseChannel channel"},
		{ "trigger": "StopChannel", "contents": "StopChannel channel"},
		{ "trigger": "PlayCDTrack", "contents": "PlayCDTrack( track[,mode] )"},
		{ "trigger": "PlayMusic", "contents": "PlayMusic( midifile$ )"},
		{ "trigger": "PlaySound", "contents": "PlaySound( sound )"},
		{ "trigger": "SoundPan", "contents": "SoundPan sound,pan#"},
		{ "trigger": "SoundVolume", "contents": "SoundVolume sound,volume#"},
		{ "trigger": "SoundPitch", "contents": "SoundPitch sound,pitch"},
		{ "trigger": "LoopSound", "contents": "LoopSound sound"},
		{ "trigger": "FreeSound", "contents": "FreeSound sound"},
		{ "trigger": "LoadSound", "contents": "LoadSound( filename$ )"},
		{ "trigger": "DirectInputEnabled", "contents": "DirectInputEnabled( )"},
		{ "trigger": "EnableDirectInput", "contents": "EnableDirectInput enable"},
		{ "trigger": "FlushJoy", "contents": "FlushJoy "},
		{ "trigger": "JoyVDir", "contents": "JoyVDir( [port] )"},
		{ "trigger": "JoyUDir", "contents": "JoyUDir( [port] )"},
		{ "trigger": "JoyZDir", "contents": "JoyZDir( [port] )"},
		{ "trigger": "JoyYDir", "contents": "JoyYDir( [port] )"},
		{ "trigger": "JoyXDir", "contents": "JoyXDir( [port] )"},
		{ "trigger": "JoyHat", "contents": "JoyHat( [port] )"},
		{ "trigger": "JoyRoll", "contents": "JoyRoll( [port] )"},
		{ "trigger": "JoyYaw", "contents": "JoyYaw( [port] )"},
		{ "trigger": "JoyPitch", "contents": "JoyPitch( [port] )"},
		{ "trigger": "JoyV", "contents": "JoyV( [port] )"},
		{ "trigger": "JoyU", "contents": "JoyU( [port] )"},
		{ "trigger": "JoyZ", "contents": "JoyZ( [port] )"},
		{ "trigger": "JoyY", "contents": "JoyY( [port] )"},
		{ "trigger": "JoyX", "contents": "JoyX( [port] )"},
		{ "trigger": "JoyWait", "contents": "JoyWait( [port] )"},
		{ "trigger": "WaitJoy", "contents": "WaitJoy( [port] )"},
		{ "trigger": "GetJoy", "contents": "GetJoy( [port] )"},
		{ "trigger": "JoyHit", "contents": "JoyHit( button[,port] )"},
		{ "trigger": "JoyDown", "contents": "JoyDown( button[,port] )"},
		{ "trigger": "JoyType", "contents": "JoyType( [port] )"},
		{ "trigger": "MoveMouse", "contents": "MoveMouse x,y"},
		{ "trigger": "FlushMouse", "contents": "FlushMouse "},
		{ "trigger": "MouseZSpeed", "contents": "MouseZSpeed( )"},
		{ "trigger": "MouseYSpeed", "contents": "MouseYSpeed( )"},
		{ "trigger": "MouseXSpeed", "contents": "MouseXSpeed( )"},
		{ "trigger": "MouseZ", "contents": "MouseZ( )"},
		{ "trigger": "MouseY", "contents": "MouseY( )"},
		{ "trigger": "MouseX", "contents": "MouseX( )"},
		{ "trigger": "MouseWait", "contents": "MouseWait( )"},
		{ "trigger": "WaitMouse", "contents": "WaitMouse( )"},
		{ "trigger": "GetMouse", "contents": "GetMouse( )"},
		{ "trigger": "MouseHit", "contents": "MouseHit( button )"},
		{ "trigger": "MouseDown", "contents": "MouseDown( button )"},
		{ "trigger": "FlushKeys", "contents": "FlushKeys "},
		{ "trigger": "WaitKey", "contents": "WaitKey( )"},
		{ "trigger": "GetKey", "contents": "GetKey( )"},
		{ "trigger": "KeyHit", "contents": "KeyHit( key )"},
		{ "trigger": "KeyDown", "contents": "KeyDown( key )"},
		{ "trigger": "HidePointer", "contents": "HidePointer "},
		{ "trigger": "ShowPointer", "contents": "ShowPointer "},
		{ "trigger": "Locate", "contents": "Locate x,y"},
		{ "trigger": "Input", "contents": "Input( [prompt$] )"},
		{ "trigger": "Print", "contents": "Print [string$]"},
		{ "trigger": "Write", "contents": "Write string$"},
		{ "trigger": "ImageRectCollide", "contents": "ImageRectCollide( image,x,y,frame,rect_x,rect_y,rect_width,rect_height )"},
		{ "trigger": "ImageRectOverlap", "contents": "ImageRectOverlap( image,x,y,rect_x,rect_y,rect_width,rect_height )"},
		{ "trigger": "RectsOverlap", "contents": "RectsOverlap( x1,y1,width1,height1,x2,y2,width2,height2 )"},
		{ "trigger": "ImagesCollide", "contents": "ImagesCollide( image1,x1,y1,frame1,image2,x2,y2,frame2 )"},
		{ "trigger": "ImagesOverlap", "contents": "ImagesOverlap( image1,x1,y1,image2,x2,y2 )"},
		{ "trigger": "TFormFilter", "contents": "TFormFilter enable"},
		{ "trigger": "TFormImage", "contents": "TFormImage image,a#,b#,c#,d#"},
		{ "trigger": "RotateImage", "contents": "RotateImage image,angle#"},
		{ "trigger": "ResizeImage", "contents": "ResizeImage image,width#,height#"},
		{ "trigger": "ScaleImage", "contents": "ScaleImage image,xscale#,yscale#"},
		{ "trigger": "ImageYHandle", "contents": "ImageYHandle( image )"},
		{ "trigger": "ImageXHandle", "contents": "ImageXHandle( image )"},
		{ "trigger": "ImageHeight", "contents": "ImageHeight( image )"},
		{ "trigger": "ImageWidth", "contents": "ImageWidth( image )"},
		{ "trigger": "AutoMidHandle", "contents": "AutoMidHandle enable"},
		{ "trigger": "MidHandle", "contents": "MidHandle image"},
		{ "trigger": "HandleImage", "contents": "HandleImage image,x,y"},
		{ "trigger": "MaskImage", "contents": "MaskImage image,red,green,blue"},
		{ "trigger": "DrawBlockRect", "contents": "DrawBlockRect image,x,y,rect_x,rect_y,rect_width,rect_height[,frame]"},
		{ "trigger": "DrawImageRect", "contents": "DrawImageRect image,x,y,rect_x,rect_y,rect_width,rect_height[,frame]"},
		{ "trigger": "TileBlock", "contents": "TileBlock image[,x][,y][,frame]"},
		{ "trigger": "TileImage", "contents": "TileImage image[,x][,y][,frame]"},
		{ "trigger": "DrawBlock", "contents": "DrawBlock image,x,y[,frame]"},
		{ "trigger": "DrawImage", "contents": "DrawImage image,x,y[,frame]"},
		{ "trigger": "ImageBuffer", "contents": "ImageBuffer( image[,frame] )"},
		{ "trigger": "GrabImage", "contents": "GrabImage image,x,y[,frame]"},
		{ "trigger": "SaveImage", "contents": "SaveImage( image,bmpfile$[,frame] )"},
		{ "trigger": "FreeImage", "contents": "FreeImage image"},
		{ "trigger": "CreateImage", "contents": "CreateImage( width,height[,frames] )"},
		{ "trigger": "CopyImage", "contents": "CopyImage( image )"},
		{ "trigger": "LoadAnimImage", "contents": "LoadAnimImage( bmpfile$,cellwidth,cellheight,first,count )"},
		{ "trigger": "LoadImage", "contents": "LoadImage( bmpfile$ )"},
		{ "trigger": "CloseMovie", "contents": "CloseMovie movie"},
		{ "trigger": "MoviePlaying", "contents": "MoviePlaying( movie )"},
		{ "trigger": "MovieHeight", "contents": "MovieHeight( movie )"},
		{ "trigger": "MovieWidth", "contents": "MovieWidth( movie )"},
		{ "trigger": "DrawMovie", "contents": "DrawMovie( movie[,x][,y][,w][,h] )"},
		{ "trigger": "OpenMovie", "contents": "OpenMovie( file$ )"},
		{ "trigger": "StringHeight", "contents": "StringHeight( string$ )"},
		{ "trigger": "StringWidth", "contents": "StringWidth( string$ )"},
		{ "trigger": "FontHeight", "contents": "FontHeight( )"},
		{ "trigger": "FontWidth", "contents": "FontWidth( )"},
		{ "trigger": "FreeFont", "contents": "FreeFont font"},
		{ "trigger": "LoadFont", "contents": "LoadFont( fontname$[,height][,bold][,italic][,underline] )"},
		{ "trigger": "CopyRect", "contents": "CopyRect source_x,source_y,width,height,dest_x,dest_y[,src_buffer][,dest_buffer]"},
		{ "trigger": "Text", "contents": "Text x,y,text$[,centre_x][,centre_y]"},
		{ "trigger": "Line", "contents": "Line x1,y1,x2,y2"},
		{ "trigger": "Oval", "contents": "Oval x,y,width,height[,solid]"},
		{ "trigger": "Rect", "contents": "Rect x,y,width,height[,solid]"},
		{ "trigger": "Plot", "contents": "Plot x,y"},
		{ "trigger": "Cls", "contents": "Cls "},
		{ "trigger": "SetFont", "contents": "SetFont font"},
		{ "trigger": "ClsColor", "contents": "ClsColor red,green,blue"},
		{ "trigger": "ColorBlue", "contents": "ColorBlue( )"},
		{ "trigger": "ColorGreen", "contents": "ColorGreen( )"},
		{ "trigger": "ColorRed", "contents": "ColorRed( )"},
		{ "trigger": "GetColor", "contents": "GetColor x,y"},
		{ "trigger": "Color", "contents": "Color red,green,blue"},
		{ "trigger": "Viewport", "contents": "Viewport x,y,width,height"},
		{ "trigger": "Origin", "contents": "Origin x,y"},
		{ "trigger": "CopyPixelFast", "contents": "CopyPixelFast src_x,src_y,src_buffer,dest_x,dest_y[,dest_buffer]"},
		{ "trigger": "CopyPixel", "contents": "CopyPixel src_x,src_y,src_buffer,dest_x,dest_y[,dest_buffer]"},
		{ "trigger": "WritePixelFast", "contents": "WritePixelFast x,y,argb[,buffer]"},
		{ "trigger": "ReadPixelFast", "contents": "ReadPixelFast( x,y[,buffer] )"},
		{ "trigger": "WritePixel", "contents": "WritePixel x,y,argb[,buffer]"},
		{ "trigger": "ReadPixel", "contents": "ReadPixel( x,y[,buffer] )"},
		{ "trigger": "UnlockBuffer", "contents": "UnlockBuffer [buffer]"},
		{ "trigger": "LockBuffer", "contents": "LockBuffer [buffer]"},
		{ "trigger": "BufferDirty", "contents": "BufferDirty buffer"},
		{ "trigger": "SaveBuffer", "contents": "SaveBuffer( buffer,bmpfile$ )"},
		{ "trigger": "LoadBuffer", "contents": "LoadBuffer( buffer,bmpfile$ )"},
		{ "trigger": "GraphicsBuffer", "contents": "GraphicsBuffer( )"},
		{ "trigger": "SetBuffer", "contents": "SetBuffer buffer"},
		{ "trigger": "GraphicsDepth", "contents": "GraphicsDepth( )"},
		{ "trigger": "GraphicsHeight", "contents": "GraphicsHeight( )"},
		{ "trigger": "GraphicsWidth", "contents": "GraphicsWidth( )"},
		{ "trigger": "Flip", "contents": "Flip [vwait]"},
		{ "trigger": "VWait", "contents": "VWait [frames]"},
		{ "trigger": "ScanLine", "contents": "ScanLine( )"},
		{ "trigger": "BackBuffer", "contents": "BackBuffer( )"},
		{ "trigger": "FrontBuffer", "contents": "FrontBuffer( )"},
		{ "trigger": "GammaBlue", "contents": "GammaBlue( blue )"},
		{ "trigger": "GammaGreen", "contents": "GammaGreen( green )"},
		{ "trigger": "GammaRed", "contents": "GammaRed( red )"},
		{ "trigger": "UpdateGamma", "contents": "UpdateGamma [calibrate]"},
		{ "trigger": "SetGamma", "contents": "SetGamma src_red,src_green,src_blue,dest_red#,dest_green#,dest_blue#"},
		{ "trigger": "GraphicsLost", "contents": "GraphicsLost( )"},
		{ "trigger": "EndGraphics", "contents": "EndGraphics "},
		{ "trigger": "Graphics3D", "contents": "Graphics3D width,height[,depth][,mode]"},
		{ "trigger": "Graphics", "contents": "Graphics width,height[,depth][,mode]"},
		{ "trigger": "Windowed3D", "contents": "Windowed3D( )"},
		{ "trigger": "GfxMode3D", "contents": "GfxMode3D( mode )"},
		{ "trigger": "GfxMode3DExists", "contents": "GfxMode3DExists( width,height,depth )"},
		{ "trigger": "CountGfxModes3D", "contents": "CountGfxModes3D( )"},
		{ "trigger": "GfxDriver3D", "contents": "GfxDriver3D( driver )"},
		{ "trigger": "TotalVidMem", "contents": "TotalVidMem( )"},
		{ "trigger": "AvailVidMem", "contents": "AvailVidMem( )"},
		{ "trigger": "GfxModeDepth", "contents": "GfxModeDepth( mode )"},
		{ "trigger": "GfxModeHeight", "contents": "GfxModeHeight( mode )"},
		{ "trigger": "GfxModeWidth", "contents": "GfxModeWidth( mode )"},
		{ "trigger": "GfxModeExists", "contents": "GfxModeExists( width,height,depth )"},
		{ "trigger": "CountGfxModes", "contents": "CountGfxModes( )"},
		{ "trigger": "SetGfxDriver", "contents": "SetGfxDriver driver"},
		{ "trigger": "GfxDriverName", "contents": "GfxDriverName( driver )"},
		{ "trigger": "CountGfxDrivers", "contents": "CountGfxDrivers( )"},
		{ "trigger": "CallDLL", "contents": "CallDLL( dll_name$,func_name$[,in_bank][,out_bank] )"},
		{ "trigger": "WriteBytes", "contents": "WriteBytes( bank,file,offset,count )"},
		{ "trigger": "ReadBytes", "contents": "ReadBytes( bank,file,offset,count )"},
		{ "trigger": "PokeFloat", "contents": "PokeFloat bank,offset,value#"},
		{ "trigger": "PokeInt", "contents": "PokeInt bank,offset,value"},
		{ "trigger": "PokeShort", "contents": "PokeShort bank,offset,value"},
		{ "trigger": "PokeByte", "contents": "PokeByte bank,offset,value"},
		{ "trigger": "PeekFloat", "contents": "PeekFloat( bank,offset )"},
		{ "trigger": "PeekInt", "contents": "PeekInt( bank,offset )"},
		{ "trigger": "PeekShort", "contents": "PeekShort( bank,offset )"},
		{ "trigger": "PeekByte", "contents": "PeekByte( bank,offset )"},
		{ "trigger": "CopyBank", "contents": "CopyBank src_bank,src_offset,dest_bank,dest_offset,count"},
		{ "trigger": "ResizeBank", "contents": "ResizeBank bank,size"},
		{ "trigger": "BankSize", "contents": "BankSize( bank )"},
		{ "trigger": "FreeBank", "contents": "FreeBank bank"},
		{ "trigger": "CreateBank", "contents": "CreateBank( [size] )"},
		{ "trigger": "DeleteFile", "contents": "DeleteFile file$"},
		{ "trigger": "CopyFile", "contents": "CopyFile file$,to$"},
		{ "trigger": "FileType", "contents": "FileType( file$ )"},
		{ "trigger": "FileSize", "contents": "FileSize( file$ )"},
		{ "trigger": "DeleteDir", "contents": "DeleteDir dir$"},
		{ "trigger": "CreateDir", "contents": "CreateDir dir$"},
		{ "trigger": "ChangeDir", "contents": "ChangeDir dir$"},
		{ "trigger": "CurrentDir", "contents": "CurrentDir( )"},
		{ "trigger": "NextFile", "contents": "NextFile( dir )"},
		{ "trigger": "CloseDir", "contents": "CloseDir dir"},
		{ "trigger": "ReadDir", "contents": "ReadDir( dirname$ )"},
		{ "trigger": "SeekFile", "contents": "SeekFile( file_stream,pos )"},
		{ "trigger": "FilePos", "contents": "FilePos( file_stream )"},
		{ "trigger": "CloseFile", "contents": "CloseFile file_stream"},
		{ "trigger": "WriteFile", "contents": "WriteFile( filename$ )"},
		{ "trigger": "ReadFile", "contents": "ReadFile( filename$ )"},
		{ "trigger": "OpenFile", "contents": "OpenFile( filename$ )"},
		{ "trigger": "TCPTimeouts", "contents": "TCPTimeouts read_millis,accept_millis"},
		{ "trigger": "TCPStreamPort", "contents": "TCPStreamPort( tcp_stream )"},
		{ "trigger": "TCPStreamIP", "contents": "TCPStreamIP( tcp_stream )"},
		{ "trigger": "AcceptTCPStream", "contents": "AcceptTCPStream( tcp_server )"},
		{ "trigger": "CloseTCPServer", "contents": "CloseTCPServer tcp_server"},
		{ "trigger": "CreateTCPServer", "contents": "CreateTCPServer( port )"},
		{ "trigger": "CloseTCPStream", "contents": "CloseTCPStream tcp_stream"},
		{ "trigger": "OpenTCPStream", "contents": "OpenTCPStream( server$,server_port[,local_port] )"},
		{ "trigger": "UDPTimeouts", "contents": "UDPTimeouts recv_timeout"},
		{ "trigger": "UDPMsgPort", "contents": "UDPMsgPort( udp_stream )"},
		{ "trigger": "UDPMsgIP", "contents": "UDPMsgIP( udp_stream )"},
		{ "trigger": "UDPStreamPort", "contents": "UDPStreamPort( udp_stream )"},
		{ "trigger": "UDPStreamIP", "contents": "UDPStreamIP( udp_stream )"},
		{ "trigger": "RecvUDPMsg", "contents": "RecvUDPMsg( udp_stream )"},
		{ "trigger": "SendUDPMsg", "contents": "SendUDPMsg udp_stream,dest_ip[,dest_port]"},
		{ "trigger": "CloseUDPStream", "contents": "CloseUDPStream udp_stream"},
		{ "trigger": "CreateUDPStream", "contents": "CreateUDPStream( [port] )"},
		{ "trigger": "HostIP", "contents": "HostIP( host_index )"},
		{ "trigger": "CountHostIPs", "contents": "CountHostIPs( host_name$ )"},
		{ "trigger": "DottedIP", "contents": "DottedIP( IP )"},
		{ "trigger": "CopyStream", "contents": "CopyStream src_stream,dest_stream[,buffer_size]"},
		{ "trigger": "WriteLine", "contents": "WriteLine stream,string$"},
		{ "trigger": "WriteString", "contents": "WriteString stream,string$"},
		{ "trigger": "WriteFloat", "contents": "WriteFloat stream,float#"},
		{ "trigger": "WriteInt", "contents": "WriteInt stream,int"},
		{ "trigger": "WriteShort", "contents": "WriteShort stream,short"},
		{ "trigger": "WriteByte", "contents": "WriteByte stream,byte"},
		{ "trigger": "ReadLine", "contents": "ReadLine( stream )"},
		{ "trigger": "ReadString", "contents": "ReadString( stream )"},
		{ "trigger": "ReadFloat", "contents": "ReadFloat( stream )"},
		{ "trigger": "ReadInt", "contents": "ReadInt( stream )"},
		{ "trigger": "ReadShort", "contents": "ReadShort( stream )"},
		{ "trigger": "ReadByte", "contents": "ReadByte( stream )"},
		{ "trigger": "ReadAvail", "contents": "ReadAvail( stream )"},
		{ "trigger": "Eof", "contents": "Eof( stream )"},
		{ "trigger": "CurrentTime", "contents": "CurrentTime( )"},
		{ "trigger": "CurrentDate", "contents": "CurrentDate( )"},
		{ "trigger": "Bin", "contents": "Bin( value )"},
		{ "trigger": "Hex", "contents": "Hex( value )"},
		{ "trigger": "Len", "contents": "Len( string$ )"},
		{ "trigger": "Asc", "contents": "Asc( string$ )"},
		{ "trigger": "Chr", "contents": "Chr( ascii )"},
		{ "trigger": "RSet", "contents": "RSet( string$,size )"},
		{ "trigger": "LSet", "contents": "LSet( string$,size )"},
		{ "trigger": "Trim", "contents": "Trim( string$ )"},
		{ "trigger": "Lower", "contents": "Lower( string$ )"},
		{ "trigger": "Upper", "contents": "Upper( string$ )"},
		{ "trigger": "Mid", "contents": "Mid( string$,start[,count] )"},
		{ "trigger": "Instr", "contents": "Instr( string$,find$[,from] )"},
		{ "trigger": "Replace", "contents": "Replace( string$,from$,to$ )"},
		{ "trigger": "Right", "contents": "Right( string$,count )"},
		{ "trigger": "Left", "contents": "Left( string$,count )"},
		{ "trigger": "String", "contents": "String( string$,repeat )"},
		{ "trigger": "RndSeed", "contents": "RndSeed( )"},
		{ "trigger": "SeedRnd", "contents": "SeedRnd seed"},
		{ "trigger": "Rand", "contents": "Rand( from[,to] )"},
		{ "trigger": "Rnd", "contents": "Rnd( from#[,to#] )"},
		{ "trigger": "Log10", "contents": "Log10( float# )"},
		{ "trigger": "Log", "contents": "Log( float# )"},
		{ "trigger": "Exp", "contents": "Exp( float# )"},
		{ "trigger": "Ceil", "contents": "Ceil( float# )"},
		{ "trigger": "Floor", "contents": "Floor( float# )"},
		{ "trigger": "Sqr", "contents": "Sqr( float# )"},
		{ "trigger": "ATan2", "contents": "ATan2( floata#,floatb# )"},
		{ "trigger": "ATan", "contents": "ATan( float# )"},
		{ "trigger": "ACos", "contents": "ACos( float# )"},
		{ "trigger": "ASin", "contents": "ASin( float# )"},
		{ "trigger": "Tan", "contents": "Tan( degrees# )"},
		{ "trigger": "Cos", "contents": "Cos( degrees# )"},
		{ "trigger": "Sin", "contents": "Sin( degrees# )"}
	]
}